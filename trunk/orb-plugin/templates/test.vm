## 	==============================	share part 1:	header comments
|||
||| Curl ORB for java (version 0.8)
|||  This code was generated by the Curl code generator automatically.

|||  package name   : $package_name
|||  generated date : $generate_date
|||


##  ==============================	share part 2 : 	import
##There can be a few of imports

||****************************||
#foreach($imp in $imports_list)
{import * from $imp}
#end

## 	==============================	switch part 
##	11111111111111111111111	DataClass
#if ($type == 1)
################	class template
{define-class $is_serializable_class $class_name $superclass 

################	fields
#foreach($fie in $field_list)
  $fie.field_is_static $fie.field_publicity $fie.field_name:$fie.field_type
#end


##@@@@@@@@@@@@@@	constructors
  {constructor public{default}
#if($constructors_superclass)
      {construct-super}
#else
     
#end  
  }

##@@@@@@@@@@@@@@	methods
##_______	empty
|| no methods for DataClass

################	getters/setters
#foreach($get in $getters)
  {getter public {$get.getter_name}:$get.getter_type
    {return self._$get.getter_name asa $get.getter_type}
  }
  
#end


#foreach($set in $setters)
  {setter public {$set.setter_name v:$set.setter_type}:void
    set.self._$set.getter_name = v
  }
  
#end

  
}
#end

##	22222222222222222222222	HttpSession
#if ($type == 2)
################	class template
{define-class $is_serializable_class $class_name $superclass 

################	fields
||****************************||
 
#foreach($fie in $field_list)
  $fie.field_is_static $fie.field_publicity $fie.field_name:$fie.field_type
#end
##@@@@@@@@@@@@@@ 	constructors	@@@@@@@@@@

  {constructor public{default HttpSession}

  }

##@@@@@@@@@@@@@@	methods @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
HTTP methods
METHOD-TEMPLATE = "\n  \{method %s \{%s\}:%s \n    %s \n  \} \n"
PROC-TEMPLATE = "\n  \{define-proc %s \{%s\}:%s \n    %s \n  \} \n"

#if ($is_static)
	{method $modifier {$args}:$return_type 
#else
    {define-proc $modifier {$args}:$return_type 
#end
       $content 
    }

#*       
1 generate method
modifier
args
Async?	AsyncWorker 	
		return type
*#
		

as-template?	
	||NOTE!! Write test code here.
	generate-method-content 

2 generate method context
  
  
##getters/setters

#foreach($get in $getters)
  {getter public {$get.getter_name}:$get.getter_type
    {return self._$get.getter_name asa $get.getter_type}
  }
  
#end


#foreach($set in $setters)
  {setter public {$set.setter_name v:$set.setter_type}:void
    set.self._$set.getter_name = v
  }
  
#end
}
#end

##	333333333333333333333333	DI
#if ($type == 3)
################	class template
{define-class $is_serializable_class $class_name $superclass 

################	fields
#foreach($fie in $field_list)
  $fie.field_is_static $fie.field_publicity $fie.field_name:$fie.field_type
#end

##@@@@@@@@@@@@@@ 	constructors	@@@@@@@@@@
 {constructor public{default server-url:#Url = null}
#if($as_template)
    || NOTE!! Write test codes here.    
#else
Å@Å@Å@Åoconstruct-super.ApplicationContextClient $server_class_name, server-url = server-urlÅp
  }             
#end

##@@@@@@@@@@@@@@	methods @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Methods Application Context

##getters/setters
#foreach($get in $getters)
  {getter public {$get.getter_name}:$get.getter_type
    {return self._$get.getter_name asa $get.getter_type}
  }
  
#end


#foreach($set in $setters)
  {setter public {$set.setter_name v:$set.setter_type}:void
    set.self._$set.getter_name = v
  }
  
#end

}
#end

##	4444444444444444444444	Exception
#if ($type == 4)
################	class template
{define-class $is_serializable_class $class_name $superclass 

################	fields
#foreach($fie in $field_list)
  $fie.field_is_static $fie.field_publicity $fie.field_name:$fie.field_type
#end

##@@@@@@@@@@@@@@ 	constructors	@@@@@@@@@@
  {constructor public{default message:String}
    {construct-super message}
  }


##@@@@@@@@@@@@@@	methods @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
##_______	empty
|| no methods for Exception

##getters/setters
#foreach($get in $getters)
  {getter public {$get.getter_name}:$get.getter_type
    {return self._$get.getter_name asa $get.getter_type}
  }
  
#end


#foreach($set in $setters)
  {setter public {$set.setter_name v:$set.setter_type}:void
    set.self._$set.getter_name = v
  }
  
#end


}
#end

