||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @author Hitoshi Okada
|||

|| request data classes

||
|| InstanceManagementRequest
||
{define-class abstract public serializable InstanceManagementRequest

  field private _header:HashTable

  {getter public open {header}:HashTable
    {return self._header}
  }
  ||{setter public open {header header:HashTable}:void
  ||  set self._header = header
  ||}
  
  {getter abstract public {class-name}:#String }
  ||{setter abstract package {className class-name:String}:void }

  {constructor public {default
                          request-header:#HashTable = null
                      }
    set self._header = {HashTable.clone-from global-header}
    {if-non-null rh = request-header then
        {concat-HashTable self.header, rh}
    }
  }
}

||
|| NewInstanceRequest
|| 
{define-class public open serializable NewInstanceRequest
  {inherits InstanceManagementRequest}

  field private _class-name:#String
  field private _arguments:#FastArray

  {constructor public {default 
                          class-name:#String,
                          arguments:#FastArray = null,
                          request-header:#HashTable = null
                      }
    {construct-super request-header = request-header}
    set self._class-name = class-name
    set self._arguments = arguments
  }

  {getter public open {class-name}:#String 
    {return self._class-name}
  }

  {setter public open {class-name class-name:#String}:void 
    set self._class-name = class-name
  }

  {getter public open {arguments}:#FastArray
    {return self._arguments}
  }

  {setter public open {arguments arguments:#FastArray}:void
    {check-null-arguments arguments}
    set self._arguments = arguments
  }
}


||
|| InvokeHttpSessionRequest
||
{define-class public open serializable InvokeHttpSessionRequest
  {inherits InstanceManagementRequest}

  field private _object-id:#String
  field private _class-name:#String
  field private _method-name:String
  field private _arguments:#FastArray

  {constructor public {default 
                          object-id:#String = null,
                          class-name:#String = null,
                          method-name:String,
                          arguments:#FastArray = null,
                          request-header:#HashTable = null
                      }
    {construct-super request-header = request-header}
    set self._object-id = object-id
    set self._class-name = class-name
    set self._method-name = method-name
    set self.arguments = arguments
  }

  {getter public open {class-name}:#String
    {return self._class-name}
  }
  {setter public open {class-name class-name:#String}:void 
    set self._class-name = class-name
  }
  
  {getter public open {object-id}:#String
    {return self._object-id}
  }

  {setter public open {object-id object-id:#String}:void 
    set self._object-id = object-id
  }

  {getter public open {method-name}:String 
    {return self._method-name}
  }

  {setter public open {method-name method-name:String}:void 
    set self._method-name = method-name
  }

  {getter public open {arguments}:#FastArray
    {return self._arguments}
  }

  {setter public open {arguments arguments:#FastArray}:void
    {check-null-arguments arguments}
    set self._arguments = arguments
  }
}


||
|| DestroyInstanceRequest
||
{define-class public open serializable DestroyInstanceRequest
  {inherits InstanceManagementRequest}

  field private _object-id:String

  {constructor public {default
                          object-id:String,
                          request-header:#HashTable = null
                      }
    {construct-super request-header = request-header}
    set self._object-id = object-id
  }

  {getter public open {class-name}:#String
    {return null}
  }
  
  {setter public open {class-name class-name:#String}:void
    || do nothing
  }

  {getter public open {object-id}:String 
    {return self._object-id}
  }

  {setter public open {object-id object-id:String}:void 
    set self._object-id = object-id
  }
}


||
|| InvokeApplicationContextRequest
||
{define-class public open serializable InvokeApplicationContextRequest
  {inherits InstanceManagementRequest}

  field private _class-name:String || bean id, component name
  field private _method-name:String
  field private _arguments:#FastArray

  {constructor public {default 
                          class-name:String, 
                          method-name:String,
                          arguments:#FastArray = null,
                          request-header:#HashTable = null
                      }
    {construct-super request-header = request-header}
    set self._class-name = class-name
    set self._method-name = method-name
    set self.arguments = arguments
  }

  {getter public open {class-name}:String
    {return self._class-name}
  }
  {setter public open {class-name class-name:String}:void 
    set self._class-name = class-name
  }

  {getter public open {method-name}:String 
    {return self._method-name}
  }
  {setter public open {method-name method-name:String}:void 
    set self._method-name = method-name
  }

  {getter public open {arguments}:#FastArray
    {return self._arguments}
  }
  {setter public open {arguments arguments:#FastArray}:void 
    {check-null-arguments arguments}
    set self._arguments = arguments
  }
}
