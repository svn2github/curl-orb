||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @author Ucai Zhang
|||

{import Method from CURL.LANGUAGE.REFLECTION}

|| gzip interceptor
{define-class public InterceptorGZip
  {inherits ClientInterceptor}

  {constructor public {default}
    {construct-super}
  }

  {method protected open {register-interceptor client:AbstractClient}:void
    {super.register-interceptor client}
  }

||--  {method protected open {build-orb-request-headers headers:#HashTable}:#HashTable
||--    {return {super.build-orb-request-headers headers}}
||--  }

||--  {method protected open {build-http-request-headers headers:#HttpRequestHeaders}:#HttpRequestHeaders
||--    {return {HttpRequestHeaders "Accept-Encoding", "gzip"}}
||--  }
||--
||--  {method protected open {handle-http-response-headers headers:#HttpResponseHeaders}:void
||--    || check the Http headers
||--    {TestCondition.assert {headers.key-exists? "Content-Encoding"}}
||--    {TestCondition.assert headers["Content-Encoding"] == "gzip"}
||--  }

  {method protected open {handle-before-request ||before-advice
                             http-headers:#HttpRequestHeaders,
                             orb-headers:#HashTable,
                             method:Method,
                             arguments:#FastArray
                         }:(#HttpRequestHeaders, #HashTable)
    {return {HttpRequestHeaders "Accept-Encoding", "gzip"}, null}
  }
  
  {method protected open {handle-after-response ||after-returning-advice
                             http-headers:#HttpResponseHeaders,
                             orb-headers:#HashTable,
                             method:Method,
                             arguments:#FastArray,
                             return-value:#any
                         }:(#HttpResponseHeaders, #HashTable)
    {TestCondition.assert {http-headers.key-exists? "Content-Encoding"}}
    {TestCondition.assert http-headers["Content-Encoding"] == "gzip"}
    {return http-headers, orb-headers}
  }
}

|| Non gzip interceptor
{define-class public NonInterceptorGZip
  {inherits ClientInterceptor}

  {constructor public {default}
    {construct-super}
  }

||--  {method protected open {handle-http-response-headers headers:#HttpResponseHeaders}:void
||--    || check the Http headers
||--    {TestCondition.assert not {headers.key-exists? "Content-Encoding"}}
||--  }
  {method protected open {handle-after-response ||after-returning-advice
                             http-headers:#HttpResponseHeaders,
                             orb-headers:#HashTable,
                             method:Method,
                             arguments:#FastArray,
                             return-value:#any
                         }:(#HttpResponseHeaders, #HashTable)
    {TestCondition.assert not {http-headers.key-exists? "Content-Encoding"}}
    {return http-headers, orb-headers}
  }
}