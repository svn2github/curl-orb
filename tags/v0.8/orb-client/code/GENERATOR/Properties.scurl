||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @author Hitoshi Okada
|||


||
|| PackageProperty
||
{define-class public open serializable PackageProperty

  field private _name:#String
  field private _class-properties:#{FastArray-of #ClassProperty}

  {setter public open {name _name:#String}:void
    set self._name = _name
  }
  {getter public open {name}:#String
    {return self._name}
  }
  
  {setter public open {class-properties _class-properties:#{FastArray-of #ClassProperty}}:void
    set self._class-properties = _class-properties
  }
  {getter public open {class-properties}:#{FastArray-of #ClassProperty}
    {return self._class-properties}
  }
}

||
|| ClassProperty
||
{define-class public open serializable ClassProperty
  
  field private _name:#String
  field private _superclass:#ClassProperty
  field private _interface-properties:#{FastArray-of #ClassProperty}
  field private _constructor-properties:#{FastArray-of #ConstructorProperty}
  field private _field-properties:#{FastArray-of #FieldProperty}
  field private _method-properties:#{FastArray-of #MethodProperty}
  field private _annotations:#{FastArray-of #AnnotationProperty}

  || NOTE: If this ClassProperty is not interface, it is null.
  field private _implement-class:#ClassProperty
  field private _server-class-name:#String

  || transient fields
  field private transient _import-package-names:{Set-of String} = {{Set-of String}}
  field private transient _getters:{Array-of GetterProperty} = {{Array-of GetterProperty}}
  field private transient _setters:{Array-of SetterProperty} = {{Array-of SetterProperty}}
  
  {setter public open {name _name:#String}:void
    set self._name = _name
  }
  {getter public open {name}:#String
    {return self._name}
  }
  
  {setter public open {superclass _superclass:#ClassProperty}:void
    set self._superclass = _superclass
  }
  {getter public open {superclass}:#ClassProperty
    {return self._superclass}
  }

  {setter public open {interface-properties _interface-properties:#{FastArray-of #ClassProperty}}:void
    set self._interface-properties = _interface-properties
  }
  {getter public open {interface-properties}:#{FastArray-of #ClassProperty}
    {return self._interface-properties}
  }

  {setter public open {constructor-properties _constructor-properties:#{FastArray-of #ConstructorProperty}}:void
    set self._constructor-properties = _constructor-properties
  }
  {getter public open {constructor-properties}:#{FastArray-of #ConstructorProperty}
    {return self._constructor-properties}
  }
  
  {setter public open {field-properties _field-properties:#{FastArray-of #FieldProperty}}:void
    set self._field-properties = _field-properties
  }
  {getter public open {field-properties}:#{FastArray-of #FieldProperty}
    {return self._field-properties}
  }

  {setter public open {method-properties _method-properties:#{FastArray-of #MethodProperty}}:void
    set self._method-properties = _method-properties
  }
  {getter public open {method-properties}:#{FastArray-of #MethodProperty}
    {return self._method-properties}
  }

  {setter public open {implement-class _implement-class:#ClassProperty}:void
    set self._implement-class = _implement-class
  }
  {getter public open {implement-class}:#ClassProperty
    {return self._implement-class}
  }
  
  {setter public open {server-class-name _server-class-name:#String}:void
    set self._server-class-name = _server-class-name
  }
  {getter public open {server-class-name}:#String
    {return self._server-class-name}
  }

  {setter public open {import-package-names _import-package-names:{Set-of String}}:void
    set self._import-package-names = _import-package-names
  }
  {getter public open {import-package-names}:{Set-of String}
    {return self._import-package-names}
  }
  
  {setter public open {getters _getters:{Array-of GetterProperty}}:void
    set self._getters = _getters
  }
  
  {getter public open {getters}:{Array-of GetterProperty}
    {return self._getters}
  }

  {setter public open {setters _setters:{Array-of SetterProperty}}:void
    set self._setters = _setters
  }
  {getter public open {setters}:{Array-of SetterProperty}
    {return self._setters}
  }

  {setter public open {annotations _annotations:#{FastArray-of #AnnotationProperty}}:void
    set self._annotations = _annotations
  }
  {getter public open {annotations}:#{FastArray-of #AnnotationProperty}
    {return self._annotations}
  }
}

||
|| FieldProperty
||
{define-class public open serializable FieldProperty
  
  field private _name:#String
  || field private _type:#ClassProperty
  field private _type:#String
  field private _modifier:#String
  field private _annotations:#{FastArray-of #AnnotationProperty}
  field transient package uninitialized-value-for-type?:bool
  
  {setter public open {name _name:#String}:void
    set self._name = _name
  }
  {getter public open {name}:#String
    {return self._name}
  }

  |#
  {setter package {type _type:#ClassProperty}:void
    set self._type = _type
  }
  {getter package {type}:#ClassProperty
    {return self._type}
  }
  #|

  {setter public open {type _type:#String}:void
    set self._type = _type
  }
  {getter public open {type}:#String
    {return self._type}
  }

  {setter public open {modifier _modifier:#String}:void
    set self._modifier = _modifier
  }
  {getter public open {modifier}:#String
    {return self._modifier}
  }

  {setter public open {annotations _annotations:#{FastArray-of #AnnotationProperty}}:void
    set self._annotations = _annotations
  }
  {getter public open {annotations}:#{FastArray-of #AnnotationProperty}
    {return self._annotations}
  }
}

||
|| SetterProperty
||
{define-class public open SetterProperty
  
  field private _name:String
  field private _type:String
  field private _modifier:String

  {constructor public {default name:String, type:String, modifier:String}
    set self._name = name
    set self._type = type
    set self._modifier = modifier
  }
  
  {setter public {name _name:String}:void
    set self._name = _name
  }
  {getter public {name}:String
    {return self._name}
  }

  {setter public {type _type:String}:void
    set self._type = _type
  }
  {getter public {type}:String
    {return self._type}
  }

  {setter public {modifier _modifier:String}:void
    set self._modifier = _modifier
  }
  {getter public {modifier}:String
    {return self._modifier}
  }
}

||
|| GetterProperty
||
{define-class public GetterProperty
  
  field private _name:String
  field private _type:String
  field private _modifier:String

  {constructor public {default name:String, type:String, modifier:String}
    set self._name = name
    set self._type = type
    set self._modifier = modifier
  }
  
  {setter public {name _name:String}:void
    set self._name = _name
  }
  {getter public {name}:String
    {return self._name}
  }

  {setter public {type _type:String}:void
    set self._type = _type
  }
  {getter public {type}:String
    {return self._type}
  }

  {setter public {modifier _modifier:String}:void
    set self._modifier = _modifier
  }
  {getter public {modifier}:String
    {return self._modifier}
  }
}

||
|| ConstructorProperty
||
{define-class public open serializable ConstructorProperty

  field private _modifier:#String
  field private _argument-types:#{FastArray-of #String}
  field private _annotations:#{FastArray-of #AnnotationProperty}

  {setter public open {modifier _modifier:#String}:void
    set self._modifier = _modifier
  }
  {getter public open {modifier}:#String
    {return self._modifier}
  }
  
  {setter public open {argument-types _argument-types:#{FastArray-of #String}}:void
    set self._argument-types = _argument-types
  }
  {getter public open {argument-types}:#{FastArray-of #String}
    {return self._argument-types}
  }

  {setter public open {annotations _annotations:#{FastArray-of #AnnotationProperty}}:void
    set self._annotations = _annotations
  }
  {getter public open {annotations}:#{FastArray-of #AnnotationProperty}
    {return self._annotations}
  }
}

||
|| MethodProperty
||
{define-class public open serializable MethodProperty

  field private _name:#String
  field private _modifier:#String
  field private _return-type:#String
  field private _argument-types:#{FastArray-of #String}
  field private _annotations:#{FastArray-of #AnnotationProperty}
  field private _server-method-name:#String

  || transient fields
  field private transient _async?:bool

  || - - methods/setters/getters in just client side - -
  
  || returns true if the str string starts with a getter prefix ("get" or "is").
  {getter public {getter?}:bool
    {if-non-null name = self.name then
        {return ({name.prefix? "get"} or {name.prefix? "is"}) and
            self.return-type != null and self.return-type != "void" and
            (self.argument-types == null or self.argument-types.size == 0)
        }
    }
    {return false}
  }

  || returns true if the str string starts with a setter prefix ("set").
  {getter public {setter?}:bool
    {if-non-null name = self.name then
        {return {name.prefix? "set"} and
            (self.return-type == null or self.return-type == "void") and
            self.argument-types != null and self.argument-types.size == 1
        }
    }
    {return false}
  }

  {setter public open {name _name:#String}:void
    set self._name = _name
  }
  {getter public open {name}:#String
    {return self._name}
  }

  {setter public open {modifier _modifier:#String}:void
    set self._modifier = _modifier
  }
  {getter public open {modifier}:#String
    {return self._modifier}
  }

  {setter public open {return-type _return-type:#String}:void
    set self._return-type = _return-type
  }
  {getter public open {return-type}:#String
    {return self._return-type}
  }
  
  {setter public open {argument-types _argument-types:#{FastArray-of #String}}:void
    set self._argument-types = _argument-types
  }
  {getter public open {argument-types}:#{FastArray-of #String}
    {return self._argument-types}
  }

  {setter public open {annotations _annotations:#{FastArray-of #AnnotationProperty}}:void
    set self._annotations = _annotations
  }
  {getter public open {annotations}:#{FastArray-of #AnnotationProperty}
    {return self._annotations}
  }
  
||  {setter public open {server-method-name _server-method-name:#String}:void
||    set self._server-method-name = _server-method-name
||  }
  {getter public open {server-method-name}:#String
    {return self._server-method-name}
  }

  {setter public open {async? _async?:bool}:void
    set self._async? = _async?
  }
  {getter public open {async?}:bool
    {return self._async?}
  }
}

||
|| AnnotationProperty
||  since 0.7
||
{define-class public open serializable AnnotationProperty

  field private _annotationType:#ClassProperty

  {setter public open {annotationType _annotationType:#ClassProperty}:void
    set self._annotationType = _annotationType
  }
  {getter public open {annotationType}:#ClassProperty
    {return self._annotationType}
  }
}

||
|| JarFileProperty
||
|#
{define-class package JarFileProperty

  field private _jarFileName:#String
  field private _packageProperties:#{FastArray-of PackageProperty}
  
  {setter package {jarFileName _jarFileName:#String}:void
    set self._jarFileName = _jarFileName
  }
  {getter package {jarFileName}:#String
    {return self._jarFileName}
  }
  
  {setter package {packageProperties _packageProperties:#{FastArray-of PackageProperty}}:void
    set self._packageProperties = _packageProperties
  }
  {getter package {packageProperties}:#{FastArray-of PackageProperty}
    {return self._packageProperties}
  }
}
#|
